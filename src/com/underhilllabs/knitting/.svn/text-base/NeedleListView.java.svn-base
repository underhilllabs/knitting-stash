package com.underhilllabs.knitting;

import android.app.ListActivity;
import android.content.Intent;
import android.database.Cursor;
import android.os.Bundle;
import android.view.ContextMenu;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ContextMenu.ContextMenuInfo;
import android.widget.AdapterView;
import android.widget.ListView;
import android.widget.SimpleCursorAdapter;
import android.widget.AdapterView.AdapterContextMenuInfo;
import android.widget.AdapterView.OnItemClickListener;


public class NeedleListView extends ListActivity {
	
	private DbAdapter ndb;
	private Cursor cur;
	private static final int INSERT_ID = Menu.FIRST;
	private static final int VIEW_ID = Menu.FIRST;
    private static final int EDIT_ID = Menu.FIRST + 1;
    private static final int DELETE_ID = Menu.FIRST + 2;
    private static final int SORT_SIZE = Menu.FIRST+3;
    private static final int SORT_TYPE = Menu.FIRST+4;
    private static final int HOME_ID = Menu.FIRST+5;

    @Override
    protected void onCreate(Bundle savedInstanceState){
        super.onCreate(savedInstanceState);
        setContentView(R.layout.needle_list_activity_view);
        ListView lv = getListView();
        //lv.setTextFilterEnabled(true);
        registerForContextMenu(lv);
        
        lv.setOnItemClickListener(new OnItemClickListener() {
			public void onItemClick(AdapterView<?> av, View v, int position,
					long id) {
				Intent i = new Intent(NeedleListView.this, NeedleView.class);
		        i.putExtra("com.underhilllabs.knitting.rowid", id);
		        startActivity(i);
				
			}
         });

        ndb = new DbAdapter(this);
        ndb.open();
        
        
        fill_data("KEY_SIZE_I");
        
    }

	public void fill_data(String sort_key) {
    	cur = ndb.fetchAllNeedles_simple(sort_key);        
       	startManagingCursor(cur);
       	String[] displayFields = new String[] { DbAdapter.KEY_SIZE, DbAdapter.KEY_TYPE, DbAdapter.KEY_LENGTH,DbAdapter.KEY_MATERIAL };
       	int[] displayViews = new int[] { R.id.size_row, R.id.type_row,R.id.length_row,R.id.material_row };
       	setListAdapter(new SimpleCursorAdapter(this, 
               R.layout.needle_list_row, cur, 
               displayFields, displayViews));
 
    }
    @Override
    public void onDestroy() {
    	super.onDestroy();
    	ndb.close();
    }
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        boolean result = super.onCreateOptionsMenu(menu);
        MenuItem addm = menu.add(0, INSERT_ID, 0, R.string.menu_add);
        MenuItem sorts = menu.add(0, SORT_SIZE, 1, R.string.sort_size);
        MenuItem sortt = menu.add(0, SORT_TYPE, 2, R.string.sort_type);
        addm.setIcon(android.R.drawable.ic_menu_add);
        sorts.setIcon(android.R.drawable.ic_menu_sort_by_size);
        sortt.setIcon(android.R.drawable.ic_menu_sort_alphabetically);
        MenuItem homem = menu.add(0, HOME_ID, 0, "Home");
        homem.setIcon(R.drawable.ic_menu_home);
        return result;
    }
    
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
        case INSERT_ID:
            Intent i = new Intent(this, NeedleAddActivity.class);
            startActivity(i);
            return true;
        case SORT_SIZE:
        	fill_data("KEY_SIZE_I");
        	return true;
        case SORT_TYPE:
        	fill_data("KEY_TYPE");
        	return true;
    	case HOME_ID:
    		Intent i3 = new Intent(this, KnittingStashHome.class);
            startActivity(i3);
            return true;
    	}
        return super.onOptionsItemSelected(item);
    }
    @Override
    public void onCreateContextMenu(ContextMenu menu, View v,
            ContextMenuInfo menuInfo) {
    	super.onCreateContextMenu(menu, v, menuInfo);
    	menu.add(0, VIEW_ID, 0, "View");
    	menu.add(0, EDIT_ID, 0, "Edit");
    	menu.add(0, DELETE_ID,0,  "Delete");
    	//edit_item.setIcon(android.R.drawable.ic_menu_edit); 
    	//del_item.setIcon(android.R.drawable.ic_menu_delete);
    }
    @Override
    public boolean onContextItemSelected(MenuItem item) {
    	AdapterContextMenuInfo info = (AdapterContextMenuInfo) item.getMenuInfo();
    	switch (item.getItemId()) {
    	case VIEW_ID:
			Intent i = new Intent(this, NeedleView.class);
	        i.putExtra("com.underhilllabs.knitting.rowid", info.id);
	        startActivity(i);
			return true;
    	case EDIT_ID:
			Intent i2 = new Intent(this, NeedleEditActivity.class);
	        i2.putExtra("com.underhilllabs.knitting.rowid", info.id);
	        startActivity(i2);
			return true;
		case DELETE_ID:
    			ndb.deleteNeedle(info.id);
    			fill_data("KEY_SIZE_I");
    			return true;
    		default:
    			return super.onContextItemSelected(item);
    	}
    }
}
